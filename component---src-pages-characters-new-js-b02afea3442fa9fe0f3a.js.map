{"version":3,"file":"component---src-pages-characters-new-js-b02afea3442fa9fe0f3a.js","mappings":"6QA+MA,EAzMsB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,gBACvB,EAAoCC,EAAAA,UAAe,GAA5CC,EAAP,KAAmBC,EAAnB,KAEMC,EADQH,EAAAA,WAAiBI,EAAAA,GACJC,QAC3B,GAA8CC,EAAAA,EAAAA,UAAS,CACrDC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNC,WAAY,GACZC,OAAQ,KANHC,EAAP,KAAwBC,EAAxB,KAJ6C,wCAiB7C,wFACMb,EADN,wDAEEC,GAAc,GAFhB,mBAI0Ba,EAAAA,EAAAA,KAJ1B,OAIUV,EAJV,OAKIF,EAAaa,kBAAkBX,GALnC,6GAjB6C,sBAa7CL,EAAAA,WAAgB,YAb6B,mCAc3CiB,MAYF,OAA0CX,EAAAA,EAAAA,UAAS,CACjDY,GAAI,KADCC,EAAP,KAAsBC,EAAtB,KAIA,GAAwBd,EAAAA,EAAAA,UAAS,CAC/BC,KAAM,KADDG,EAAP,KAAaW,EAAb,KAIMC,EAAenB,EAAaoB,cAAcC,KAAI,SAACC,GACnD,MAAO,CAAEC,KAAMD,EAASlB,KAAMoB,MAAOF,EAASP,OAI5CU,EAAc,GA+ClB,SAASC,EAAgBC,EAAzB,GAA8C,IAAhBvB,EAAe,EAAfA,KAAMoB,EAAS,EAATA,MAC5BI,EAAY,iBAAQlB,GAC1BkB,EAAaxB,GAAQoB,EACrBb,EAAmBiB,GAGrB,OACE,gBAAC,WAAD,KACE,gBAACC,EAAA,EAAD,KACE,gBAACA,EAAA,QAAD,CAAYC,OAAO,SACjB,gBAACD,EAAA,QAAD,CACEE,MAAM,kBACNhB,GAAG,gBACHX,KAAK,OACLoB,MAAOd,EAAgBN,KACvB4B,SAAUN,IAEZ,gBAACG,EAAA,WAAD,CACEE,MAAM,yBACNhB,GAAG,uBACHX,KAAK,cACLoB,MAAOd,EAAgBL,YACvB2B,SAAUN,KAKd,gBAACG,EAAA,QAAD,CAAYC,OAAO,SACjB,gBAACD,EAAA,SAAD,CACEE,MAAM,gBACNE,QAASd,EACTf,KAAK,QACLoB,MAAOL,EAAaf,KACpB4B,SA9CV,SAAqBL,EAArB,GAAyC,EAAfvB,KAAgB,IAAVoB,EAAS,EAATA,MAE9BP,EAAiBO,MAAAA,EAAAA,EAAS,IAC1BC,EAAcT,EAAckB,MAAMb,KAAI,SAACd,GACrC,MAAO,CAAEgB,KAAMhB,EAAKH,KAAMoB,MAAOjB,EAAKQ,OAExCoB,QAAQC,IAAIpC,EAAaoB,cAAciB,MAAK,SAACC,GAAD,OAAOA,EAAEvB,KAAOS,UA4CxD,gBAACK,EAAA,QAAD,KACE,gBAAC,EAAAU,KAAD,CAAMC,GAAG,YAAT,uBAuBF,gBAACX,EAAA,QAAD,CAAYC,OAAO,SACjB,gBAACD,EAAA,SAAD,CACEE,MAAM,eACNE,QAASR,EACTrB,KAAK,OACLoB,MAAOjB,EAAKH,KACZ4B,SAvEV,SAAoBL,EAApB,GAAwC,EAAfvB,KAAgB,IAAD,EAAToB,EAAS,EAATA,MAC7BN,EAAO,UAACF,EAAckB,MAAMG,MAAK,SAACC,GAAD,OAAOA,EAAEvB,KAAOS,YAA1C,QAAoD,QA0EvD,gBAACK,EAAA,QAAD,CAAYC,OAAO,SACjB,gBAACD,EAAA,QAAD,CACEY,KAAK,SACLV,MAAM,UACN3B,KAAK,SACLoB,MAAOd,EAAgBD,OACvBuB,SAAUN,IAEZ,gBAACG,EAAA,QAAD,CACEY,KAAK,SACLV,MAAM,cACN3B,KAAK,aACLoB,MAAOd,EAAgBF,WACvBwB,SAAUN,KAId,gBAACG,EAAA,QAAD,CAAYC,OAAO,SACjB,gBAACD,EAAA,QAAD,KACE,gBAACa,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,OACLC,QAAQ,gBACRC,OAAK,EACLC,GAAIR,EAAAA,KACJC,GAAG,cACHQ,QAAS,kBAAMpD,EAAgBc,OAGnC,gBAACmB,EAAA,QAAD,KACE,gBAACa,EAAA,EAAD,CACED,KAAK,SACLM,GAAIR,EAAAA,KACJC,GAAG,cACHK,QAAQ,SACRC,OAAK,SCrMnB,ECMiB,WAChB,IACMG,EADQpD,EAAAA,WAAiBI,EAAAA,GACZgD,KASnB,OACC,gBAAC,WAAD,KACC,gBAAC,EAAD,CAAerD,gBATjB,SAAyBc,GAExBA,EAAgBwC,OAASD,EAAKE,KAAKpC,GACnCL,EAAgB0C,SAAWH,EAAKE,KAAKC,UACrCC,EAAAA,EAAAA,IAAa3C","sources":["webpack://dungeon-world-manager/./src/app/Characters/components/CharacterForm.js","webpack://dungeon-world-manager/./src/pages/characters/new.js","webpack://dungeon-world-manager/./src/app/Characters/BaseInfo/index.js"],"sourcesContent":["import { Link } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport State from \"../../../state\";\r\nimport { getClasses } from \"../../../functions/db\";\r\n\r\nconst CharacterForm = ({ characterSubmit }) => {\r\n  const [loadedData, setLoadedData] = React.useState(false);\r\n  const state = React.useContext(State);\r\n  const stateClasses = state.classes;\r\n  const [createCharacter, setCreateCharacter] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    class: \"\",\r\n    race: \"\",\r\n    baseDamage: \"\",\r\n    baseHp: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    attemptLoadClasses();\r\n  });\r\n\r\n  async function attemptLoadClasses() {\r\n    if (loadedData) return;\r\n    setLoadedData(true);\r\n    try {\r\n      const classes = await getClasses();\r\n      stateClasses.loadPublicClasses(classes);\r\n    } catch {}\r\n  }\r\n\r\n  const [selectedClass, setselectedClass] = useState({\r\n    id: \"\",\r\n  });\r\n\r\n  const [race, setRace] = useState({\r\n    name: \"\",\r\n  });\r\n\r\n  const classOptions = stateClasses.publicClasses.map((curClass) => {\r\n    return { text: curClass.name, value: curClass.id };\r\n  });\r\n\r\n  // todo: use state here\r\n  let raceOptions = [];\r\n  // if (selectedClass != \"\") {\r\n  //   raceOptions = selectedClass.races.map((race) => {\r\n  //     return { text: race.name, value: race.id };\r\n  //   });\r\n  // }\r\n\r\n  // Update createCharacter.races\r\n  // 1. Get the current races\r\n  // 2. Push newrace into the current races.\r\n  // 3. Update the createCharacter with the newrace.\r\n\r\n  // function changeNameRec(e, { name, value }) {\r\n  //   const newNameRec = { ...nameRec };\r\n  //   newNameRec[name] = value;\r\n  //   console.log(name, value);\r\n  //   setNameRec(newNameRec);\r\n  // }\r\n\r\n  // function addName() {\r\n  //   /* 1. Copy the create character\r\n  //      2. Find the race Selected\r\n  //      3. Add the name inputted into the race\r\n  //      4. Update the character */\r\n  //   const newCharacter = { ...createharacter };\r\n  //   const raceSelected = newCharacter.races.find((race) => {\r\n  //     return race.name === nameRec.race;\r\n  //   });\r\n  //   raceSelected.names = raceSelected.names || [];\r\n  //   raceSelected.names.push(nameRec.name);\r\n  //   setNameRec({ name: \"\", race: \"\" });\r\n  //   setCreateCharacter(newCharacter);\r\n  // }\r\n\r\n  function selectClass(e, { name, value }) {\r\n    // thisClass = stateClasses.publicClasses.find((c) => c.id === value);\r\n    setselectedClass(value ?? \"\");\r\n    raceOptions = selectedClass.races.map((race) => {\r\n      return { text: race.name, value: race.id };\r\n    });\r\n    console.log(stateClasses.publicClasses.find((c) => c.id === value));\r\n  }\r\n\r\n  function selectRace(e, { name, value }) {\r\n    setRace(selectedClass.races.find((c) => c.id === value) ?? \"\");\r\n  }\r\n\r\n  function changeCharacter(e, { name, value }) {\r\n    const newCharacter = { ...createCharacter };\r\n    newCharacter[name] = value;\r\n    setCreateCharacter(newCharacter);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            label=\"Character name:\"\r\n            id=\"charactername\"\r\n            name=\"name\"\r\n            value={createCharacter.name}\r\n            onChange={changeCharacter}\r\n          />\r\n          <Form.TextArea\r\n            label=\"Character Description:\"\r\n            id=\"characterDescription\"\r\n            name=\"description\"\r\n            value={createCharacter.description}\r\n            onChange={changeCharacter}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Select existing class */}\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Select\r\n            label=\"Select Class:\"\r\n            options={classOptions}\r\n            name=\"class\"\r\n            value={classOptions.name}\r\n            onChange={selectClass}\r\n          />\r\n        </Form.Group>\r\n        {/* Link to create a new class */}\r\n        <Form.Field>\r\n          <Link to=\"/classes\">Create a new class</Link>\r\n        </Form.Field>\r\n\r\n        {/* <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            label=\"Race name:\"\r\n            id=\"racename\"\r\n            name=\"name\"\r\n            value={race.name}\r\n            onChange={changeRace}\r\n          />\r\n          <Form.TextArea\r\n            label=\"Race Description:\"\r\n            id=\"raceDescription\"\r\n            name=\"description\"\r\n            value={race.description}\r\n            onChange={changeRace}\r\n          />\r\n        </Form.Group>\r\n        <Form.Field>\r\n          <Button onClick={addRace}>Add Race</Button>\r\n        </Form.Field>\r\n*/}\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Select\r\n            label=\"Select Race:\"\r\n            options={raceOptions}\r\n            name=\"race\"\r\n            value={race.name}\r\n            onChange={selectRace}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            type=\"number\"\r\n            label=\"Base HP\"\r\n            name=\"baseHp\"\r\n            value={createCharacter.baseHp}\r\n            onChange={changeCharacter}\r\n          />\r\n          <Form.Input\r\n            type=\"number\"\r\n            label=\"Base Damage\"\r\n            name=\"baseDamage\"\r\n            value={createCharacter.baseDamage}\r\n            onChange={changeCharacter}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <Button\r\n              color=\"green\"\r\n              icon=\"plus\"\r\n              content=\"Add Character\"\r\n              fluid\r\n              as={Link}\r\n              to=\"/characters\"\r\n              onClick={() => characterSubmit(createCharacter)}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Button\r\n              type=\"button\"\r\n              as={Link}\r\n              to=\"/characters\"\r\n              content=\"Cancel\"\r\n              fluid\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CharacterForm;\r\n","import BaseInfo from \"../../app/Characters/BaseInfo\";\r\nexport default BaseInfo;\r\n","import React from 'react';\r\nimport {} from 'semantic-ui-react';\r\nimport { addCharacter } from '../../../functions/db';\r\n// Importing a state\r\nimport State from '../../../state';\r\nimport CharacterForm from '../components/CharacterForm';\r\n\r\nconst BaseInfo = () => {\r\n\tconst state = React.useContext(State);\r\n\tconst auth = state.auth;\r\n\r\n\tfunction characterSubmit(createCharacter) {\r\n\t\t//This is going to tie the user with the character that is created.\r\n\t\tcreateCharacter.userId = auth.user.id;\r\n\t\tcreateCharacter.userName = auth.user.userName;\r\n\t\taddCharacter(createCharacter);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CharacterForm characterSubmit={characterSubmit} />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default BaseInfo;\r\n"],"names":["characterSubmit","React","loadedData","setLoadedData","stateClasses","State","classes","useState","name","description","class","race","baseDamage","baseHp","createCharacter","setCreateCharacter","getClasses","loadPublicClasses","attemptLoadClasses","id","selectedClass","setselectedClass","setRace","classOptions","publicClasses","map","curClass","text","value","raceOptions","changeCharacter","e","newCharacter","Form","widths","label","onChange","options","races","console","log","find","c","Link","to","type","Button","color","icon","content","fluid","as","onClick","auth","userId","user","userName","addCharacter"],"sourceRoot":""}