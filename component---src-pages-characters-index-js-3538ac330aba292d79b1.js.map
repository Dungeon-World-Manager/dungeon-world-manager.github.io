{"version":3,"file":"component---src-pages-characters-index-js-3538ac330aba292d79b1.js","mappings":"mMAgDA,IA5CmB,SAAC,GAAD,IAClBA,EADkB,EAClBA,OACAC,EAFkB,EAElBA,KACAC,EAHkB,EAGlBA,YAHkB,IAIlBC,MAAAA,OAJkB,MAIV,OAJU,MAKlBC,GAAAA,OALkB,MAKb,GALa,MAMlBC,SAAAA,OANkB,aAOlBC,OAAAA,OAPkB,MAOT,GAPS,SASlB,gBAAC,IAAD,KACED,GAAYC,EACZ,gBAAC,YAAD,KACC,gBAAC,gBAAD,KACC,gBAAC,IAAD,CAAMC,QAAQ,KACb,gBAAC,WAAD,CACCC,GAAIC,EAAAA,KACJL,GAAIE,EACJH,MAAOA,EACPO,UAAU,SAEV,gBAAC,IAAD,CAAMC,KAAK,WANZ,WAYA,KAEJ,gBAAC,YAAD,KACC,gBAAC,WAAD,KAAcX,GAAU,cACvBC,EAAO,gBAAC,SAAD,KAAYA,GAAoB,KACxC,gBAAC,gBAAD,KACEC,GAAe,oBAIlB,gBAAC,YAAD,KACC,gBAAC,gBAAD,KACC,gBAAC,IAAD,CAAQM,GAAIC,EAAAA,KAAML,GAAIA,EAAIQ,KAAK,MAAMC,QAAQ,c,6LCwBjD,EA3DuB,WAEtB,IAEMC,EADQC,EAAAA,WAAiBC,EAAAA,GACNC,WAJG,wCAQ5B,2HAIyBC,EAAAA,EAAAA,MAJzB,OAIMD,EAJN,OAKEH,EAAWK,eAAeF,GAL5B,2CAR4B,wBAmB5B,OAdAG,EAAAA,EAAAA,YAAU,YALkB,mCAM3BC,MAcA,gBAAC,WAAD,KACC,gBAACC,EAAA,EAAD,CAAMf,QAAS,EAAGgB,WAAS,GAC1B,gBAACD,EAAA,SAAD,KACC,gBAACE,EAAA,EAAD,CAAQhB,GAAG,MAAX,eAED,gBAACc,EAAA,SAAD,CAAaZ,UAAU,SACtB,gBAACe,EAAA,EAAD,CACCjB,GAAIC,EAAAA,KACJL,GAAG,kBACHQ,KAAK,OACLT,MAAM,QACNU,QAAQ,oBAIX,gBAACa,EAAA,QAAD,CAAYH,WAAS,EAACI,YAAa,GACjCb,EAAWc,KAAKC,KAAI,SAAAC,GACpB,OACC,gBAACC,EAAA,EAAD,CACCC,IAAG,oBAAsBF,EAAKG,GAC9BjC,OAAQ8B,EAAKnB,KACbV,KAAM6B,EAAKI,SACXhC,YAAa4B,EAAK5B,YAClBE,GAAE,oBAAsB0B,EAAKG,GAC7B3B,OAAM,oBAAsBwB,EAAKG,WClDxC","sources":["webpack://dungeon-world-manager/./src/app/components/CustomCard.js","webpack://dungeon-world-manager/./src/app/Characters/index.js","webpack://dungeon-world-manager/./src/pages/characters/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Icon, Grid, Button } from 'semantic-ui-react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst CustomCard = ({\r\n\theader,\r\n\tmeta,\r\n\tdescription,\r\n\tcolor = 'grey',\r\n\tto = '',\r\n\tisAuthor = false,\r\n\teditTo = '',\r\n}) => (\r\n\t<Card>\r\n\t\t{isAuthor && editTo ? (\r\n\t\t\t<Card.Content>\r\n\t\t\t\t<Card.Description>\r\n\t\t\t\t\t<Grid columns='1'>\r\n\t\t\t\t\t\t<Grid.Column\r\n\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\tto={editTo}\r\n\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\ttextAlign='right'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon name='pencil' />\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card.Description>\r\n\t\t\t</Card.Content>\r\n\t\t) : null}\r\n\r\n\t\t<Card.Content>\r\n\t\t\t<Card.Header>{header || 'Add header'}</Card.Header>\r\n\t\t\t{meta ? <Card.Meta>{meta}</Card.Meta> : null}\r\n\t\t\t<Card.Description>\r\n\t\t\t\t{description || 'Add description'}\r\n\t\t\t</Card.Description>\r\n\t\t</Card.Content>\r\n\r\n\t\t<Card.Content>\r\n\t\t\t<Card.Description>\r\n\t\t\t\t<Button as={Link} to={to} icon='eye' content='View' />\r\n\t\t\t</Card.Description>\r\n\t\t</Card.Content>\r\n\t</Card>\r\n);\r\n\r\nexport default CustomCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Card, Grid, Header } from 'semantic-ui-react';\r\nimport { getCharacterInfo } from '../../functions/db';\r\nimport CustomCard from '../components/CustomCard';\r\nimport State from '../../state';\r\nimport { Link } from 'gatsby';\r\n\r\nconst CharactersList = () => {\r\n\t/*Retrieve Class and Character data from firebase*/\r\n\tvar dataLoaded = false;\r\n\tconst state = React.useContext(State);\r\n\tconst stateChars = state.characters;\r\n\tuseEffect(() => {\r\n\t\tloadCharacterData();\r\n\t});\r\n\tasync function loadCharacterData() {\r\n\t\tif (dataLoaded === true) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tvar characters = await getCharacterInfo();\r\n\t\t\tstateChars.loadCharacters(characters);\r\n\t\t}\r\n\t\t/* Loop the card so that each new collection of data is displayed (based on user is done later) */\r\n\t\t/* Display the collection in a card */\r\n\t}\r\n\t/*Put the character info into a new card that will be displayed*/\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid columns={2} stackable>\r\n\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Header as='h1'>Characters</Header>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column textAlign='right'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\tto='/characters/new'\r\n\t\t\t\t\t\ticon='plus'\r\n\t\t\t\t\t\tcolor='green'\r\n\t\t\t\t\t\tcontent='New Character'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t\t<Card.Group stackable itemsPerRow={3}>\r\n\t\t\t\t{stateChars.list.map(char => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CustomCard\r\n\t\t\t\t\t\t\tkey={`/characters/view#${char.id}`}\r\n\t\t\t\t\t\t\theader={char.name}\r\n\t\t\t\t\t\t\tmeta={char.userName}\r\n\t\t\t\t\t\t\tdescription={char.description}\r\n\t\t\t\t\t\t\tto={`/characters/view#${char.id}`}\r\n\t\t\t\t\t\t\teditTo={`/characters/edit#${char.id}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Card.Group>\r\n\t\t\t{/* <Card\r\n\t\t\t\thref='#Character-details-page'\r\n\t\t\t\theader='Character Name'\r\n\t\t\t\tmeta='Character Class'\r\n\t\t\t\tdescription='Character Description/Backstory'\r\n\t\t\t/> */}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CharactersList;\r\n","import CharactersList from '../../app/Characters';\r\nexport default CharactersList;\r\n"],"names":["header","meta","description","color","to","isAuthor","editTo","columns","as","Link","textAlign","name","icon","content","stateChars","React","State","characters","getCharacterInfo","loadCharacters","useEffect","loadCharacterData","Grid","stackable","Header","Button","Card","itemsPerRow","list","map","char","CustomCard","key","id","userName"],"sourceRoot":""}